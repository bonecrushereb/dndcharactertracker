// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using dndTracker.Data;

#nullable disable

namespace dndTracker.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("dndTracker.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Alignment")
                        .HasColumnType("text");

                    b.Property<string>("Allies")
                        .HasColumnType("text");

                    b.Property<string>("Armor")
                        .HasColumnType("text");

                    b.Property<string>("BackStory")
                        .HasColumnType("text");

                    b.Property<string>("Background")
                        .HasColumnType("text");

                    b.Property<string>("Bonds")
                        .HasColumnType("text");

                    b.Property<int>("Charisma")
                        .HasColumnType("integer");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Constitution")
                        .HasColumnType("integer");

                    b.Property<int>("CurrentHealth")
                        .HasColumnType("integer");

                    b.Property<int>("Dexterity")
                        .HasColumnType("integer");

                    b.Property<string>("Enemies")
                        .HasColumnType("text");

                    b.Property<string>("EyeColor")
                        .HasColumnType("text");

                    b.Property<string>("Faith")
                        .HasColumnType("text");

                    b.Property<string>("Flaws")
                        .HasColumnType("text");

                    b.Property<int>("FullHealth")
                        .HasColumnType("integer");

                    b.Property<string>("HairStyle")
                        .HasColumnType("text");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<string>("Ideals")
                        .HasColumnType("text");

                    b.Property<int>("Intelligence")
                        .HasColumnType("integer");

                    b.Property<string[]>("Languages")
                        .HasColumnType("text[]");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("LifeStyle")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Organizations")
                        .HasColumnType("text");

                    b.Property<string>("PersonalityTrait")
                        .HasColumnType("text");

                    b.Property<int>("ProfBonus")
                        .HasColumnType("integer");

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sex")
                        .HasColumnType("text");

                    b.Property<string>("SkinColor")
                        .HasColumnType("text");

                    b.Property<int>("Strength")
                        .HasColumnType("integer");

                    b.Property<int>("TempHealth")
                        .HasColumnType("integer");

                    b.Property<string[]>("Tools")
                        .HasColumnType("text[]");

                    b.Property<int>("WalkSpeed")
                        .HasColumnType("integer");

                    b.Property<string[]>("Weapons")
                        .HasColumnType("text[]");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.Property<int>("Wisdom")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 50,
                            Alignment = "Neutral Good",
                            Allies = "test",
                            Armor = "Leather",
                            BackStory = "test",
                            Background = "test",
                            Bonds = "test",
                            Charisma = 16,
                            Class = "Rogue",
                            Constitution = 16,
                            CurrentHealth = 70,
                            Dexterity = 20,
                            Enemies = "test",
                            Faith = "none",
                            Flaws = "test",
                            FullHealth = 91,
                            HairStyle = "long and curly",
                            Height = 63,
                            Ideals = "test",
                            Intelligence = 11,
                            Languages = new[] { "Common", "Dwarvish", "Elvish", "Orc", "Thieves’ Cant" },
                            Level = 11,
                            LifeStyle = "Rich",
                            Name = "HÜND",
                            Organizations = "test",
                            PersonalityTrait = "test",
                            ProfBonus = 4,
                            Race = "Half-Elf",
                            Sex = "Male",
                            SkinColor = "Pale White",
                            Strength = 11,
                            TempHealth = 0,
                            Tools = new[] { "Smith's Tools", "Thieves' Tools" },
                            WalkSpeed = 40,
                            Weapons = new[] { "crossbow", "hand", "longsword", "rapier", "shortsword", "simple weapons" },
                            Weight = 120,
                            Wisdom = 13
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
